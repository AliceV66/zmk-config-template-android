on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable

    strategy:
      fail-fast: false
      matrix:
        include:
          - board: nice_nano_v2
            shield: wired_split_funda
        
    steps:
    
      - name: Checkout ZMK Config
        uses: actions/checkout@v4
        # SIN ARGUMENTO "path:".
        # Esto descarga tu repositorio (con 'west.yml' en la raíz y 'config/' adentro)
        # directamente en ${{ github.workspace }}

      - name: Initialize west
        run: |
          # 1. Inicializamos west. '-l' significa "usar el manifiesto local"
          #    que ahora es ${{ github.workspace }}/west.yml
          #    (Esta es la forma estándar de ZMK)
          west init -l
          
          # 2. west update leerá west.yml, verá el 'self: path: config',
          #    y descargará 'zmk' y 'zephyr' en la raíz.
          west update

      - name: Build
        run: |
          # 3. Construimos. La app está en 'zmk/app'.
          #    Tu configuración está en 'config/' (como define tu west.yml).
          west build --pristine -s zmk/app -b ${{ matrix.board }} -- -DSHIELD=${{ matrix.shield }} -DZMK_CONFIG="${{ github.workspace }}/config"
        
      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.board }}-${{ matrix.shield }}
          path: |
            build/zephyr/zmk.uf2
            build/zephyr/zmk.hex