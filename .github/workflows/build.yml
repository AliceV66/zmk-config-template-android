on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable

    strategy:
      fail-fast: false
      matrix:
        include:
          - board: nice_nano_v2
            shield: wired_split_funda
        

    steps:
    
      - name: Checkout ZMK Config
        # Esto descarga tu repositorio de configuración en la carpeta 'config'
        uses: actions/checkout@v4
        with:
          path: config

      - name: Cache west modules
        # Esta es la corrección clave: "v2" en la 'key'
        # Fuerza a GitHub a ignorar el cache corrupto y descargar todo de nuevo.
        uses: actions/cache@v4
        with:
          path: |
            bootloader/
            modules/
            tools/
            zephyr/
            zmk/
          key: west-cache-v2-${{ hashFiles('config/west.yml') }}
          restore-keys: |
            west-cache-

      - name: Initialize west
        run: |
          west init -l config
          west update
          # 'west update' leerá tu config/west.yml y descargará ZMK y Zephyr

      - name: Build
        run: |
          # El --pristine limpia compilaciones anteriores
          # El -s zmk/app le dice dónde está el código fuente de ZMK
          # El -DZMK_CONFIG apunta a tu carpeta de configuración
          west build --pristine -s zmk/app -b ${{ matrix.board }} -- -DSHIELD=${{ matrix.shield }} -DZMK_CONFIG="${{ github.workspace }}/config"
        
      - name: Archive firmware
        # Si la compilación tiene éxito, esto tomará los archivos .uf2 y .hex
        # y los adjuntará a la página de la "Action" para que los descargues.
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.board }}-${{ matrix.shield }}
          path: |
            build/zephyr/zmk.uf2
            build/zephyr/zmk.hex